enum CalendarType {
  GREGORIAN
  SHAMSI
}

enum ThemeType {
  DARK
  LIGHT
  SYSTEM
}

type Space @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String
  emoji: String
  color: String
  todos: [Todo] @hasMany(indexName: "bySpace", fields: ["id"])
  parentSpace: ID @index(name: "byParent")
  spaces: [Todo] @hasMany(indexName: "byParent", fields: ["id"])
  sections: [Section] @hasMany(indexName: "bySpace", fields: ["id"])
}

type Todo @model @auth(rules: [{allow: private}, {allow: owner}]) {
  id: ID!
  title: String!
  content: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  startDate: AWSDateTime
  dueDate: AWSDateTime
  endDate: AWSDateTime
  doneAt: AWSDateTime
  priority: Int
  timezone: String
  isFloating: Boolean
  isAllDay: Boolean
  rrule: String
  sectionID: ID! @index(name: "bySection")
  parentTodo: ID @index(name: "byParent")
  spaceId: ID! @index(name: "bySpace")
  section: Section @belongsTo
  reminders: [Reminder] @hasMany(indexName: "byTodo", fields: ["id"])
  tags: [Tag] @manyToMany(relationName: "TodoTag")
  todos: [Todo] @hasMany(indexName: "byParent", fields: ["id"])
  nextItem: Todo @hasOne
  space: Space @belongsTo
}

type Preferences @model @auth(rules: [{allow: owner}]) {
  id: ID!
  theme: ThemeType
  calendar: CalendarType
}

type Section @model @auth(rules: [{allow: owner}]) {
  id: ID!
  name: String!
  todos: [Todo] @hasMany(indexName: "bySection", fields: ["id"])
  spaceID: ID! @index(name: "bySpace")
  space: Space @belongsTo
}

enum ReminderStatus {
  INITIALIZED
  SHOWN
  SNOOZED
  DONE
}

type Reminder @model @auth(rules: [{allow: owner}]) {
  id: ID!
  trigger: String!
  status: ReminderStatus
  todoID: ID! @index(name: "byTodo")
  todo: Todo @belongsTo
}

type Tag @model @auth(rules: [{allow: owner}]) {
  id: ID!
  name: String!
  color: String
  todos: [Todo] @manyToMany(relationName: "TodoTag")
}
 